name: "Scheduled tasks"

on:
  schedule:
    - cron: "0 0 * * 1,3,5" # midnight on Monday, Wednesday, Friday
  push:
    paths: [".github/workflows/scheduled.yaml"] # build when this file is updated
  workflow_dispatch:

jobs:
  stale:
    name: Close stale PRs
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/stale@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-pr-message: "This pull request has not had any activity recently. It will be closed without further activity."

          days-before-stale: 14
          days-before-close: 7

          stale-pr-label: "C-stale"
          exempt-pr-labels: "C-keep-open"

  security-audit:
    name: Security audit
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Audit dependencies
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  check-other-targets:
    name: Type checking (${{ matrix.target.name }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target:
          # All tier 1 platforms as of 2020-12-28
          - { name: "ARM64 Linux", triple: aarch64-unknown-linux-gnu, has_std: true }
          - { name: "32-bit MinGW", triple: i686-pc-windows-gnu, has_std: true }
          - { name: "32-bit MSVC", triple: i686-pc-windows-msvc, has_std: true }
          - { name: "32-bit Linux", triple: i686-unknown-linux-gnu, has_std: true }
          - { name: "64-bit macOS", triple: x86_64-apple-darwin, has_std: true }
          - { name: "64-bit MinGW", triple: x86_64-pc-windows-gnu, has_std: true }
          - { name: "64-bit MSVC", triple: x86_64-pc-windows-msvc, has_std: true }
          - { name: "64-bit Linux", triple: x86_64-unknown-linux-gnu, has_std: true }
          # Select tier 2 platforms as of 2020-12-28
          - { name: "ARM64 Fuchsia", triple: aarch64-fuchsia, has_std: true }
          - { name: "ARM64 Android", triple: aarch64-linux-android, has_std: true }
          - { name: "Bare Cortex", triple: thumbv7em-none-eabihf, has_std: false }
          - { name: "WASI", triple: wasm32-wasi, has_std: true }
          - { name: "64-bit Fuchsia", triple: x86_64-fuchsia, has_std: true }
          - { name: "64-bit x86 Android", triple: x86_64-linux-android, has_std: true }
          - { name: "NetBSD", triple: x86_64-unknown-netbsd, has_std: true }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target.triple }}
          override: true

      - name: Install cargo-hack
        shell: bash
        run: |
          curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C ~/.cargo/bin

      - name: Check feature powerset
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: |
            check
            --no-dev-deps
            --version-range 1.46..
            --clean-per-version
            --feature-powerset
            --optional-deps
            --exclude-features default,std,local-offset,quickcheck,quickcheck-dep,time-macros,formatting,itoa,serde-human-readable
            --exclude-all-features
            --target ${{ matrix.target.triple }}
        if: matrix.target.has_std == false

      - name: Check feature powerset
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: |
            check
            --no-dev-deps
            --version-range 1.46..
            --clean-per-version
            --feature-powerset
            --optional-deps
            --exclude-features default,quickcheck-dep,time-macros,itoa
            --target ${{ matrix.target.triple }}
        if: matrix.target.has_std == true
